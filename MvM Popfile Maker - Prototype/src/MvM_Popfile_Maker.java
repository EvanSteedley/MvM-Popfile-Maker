import java.util.ArrayList;

/**
 * 
 */

/**
 * @author Evvy
 *
 */
public class MvM_Popfile_Maker {
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		ArrayList<String> Imports = new ArrayList<String>();
		Imports.add("#base robot_giant.pop");
		Imports.add("#base robot_standard.pop");
		WaveSchedule x = new WaveSchedule();
		x.setStartingCurrency(400);
		x.setRespawnWaveTime(5);
		x.setBotsSpawnAttack(true);
		for (String imp : Imports)
			System.out.println(imp);
		System.out.println("");
		Mission M1 = new Mission();
		M1.setObjective("DestroySentries");
		M1.setInitialCooldown(30);
		M1.setWhere("spawnbot");
		M1.addParameter(new Parameter("BeginAtWave", 1));
		M1.addParameter(new Parameter("RunForThisManyWaves", 13));
		M1.setCooldownTime(40);
		M1.bot.addParameter(new Parameter("Template", "T_TFBot_SentryBuster"));
		M1.bot.setClass("Demoman");
		x.addPiece(M1);
		Mission M2 = new Mission();
		M2.setObjective("Sniper");
		M2.setInitialCooldown(20);
		M2.setWhere("spawnbot_mission_sniper");
		M2.addParameter(new Parameter("BeginAtWave", 3));
		M2.addParameter(new Parameter("RunForThisManyWaves", 1));
		M2.setCooldownTime(20);
		M2.addParameter(new Parameter("DesiredCount", 2));
		M2.bot.setClass("Sniper");
		M2.bot.setSkill("Hard");
		M2.bot.setName("Sniper");
		M2.bot.addParameter(new Parameter("MaxVisionRange", 3000));
		x.addPiece(M2);
		Mission M3 = new Mission();
		M3.setObjective("Sniper");
		M3.setInitialCooldown(20);
		M3.setWhere("spawnbot_mission_sniper");
		M3.addParameter(new Parameter("BeginAtWave", 7));
		M3.addParameter(new Parameter("RunForThisManyWaves", 1));
		M3.setCooldownTime(45);
		M3.addParameter(new Parameter("DesiredCount", 2));
		M3.bot.setClass("Sniper");
		M3.bot.setSkill("Hard");
		M3.bot.setName("Sniper");
		M3.bot.addParameter(new Parameter("MaxVisionRange", 3000));
		x.addPiece(M3);
		Mission M4 = new Mission();
		M4.setObjective("Spy");
		M4.setInitialCooldown(30);
		M4.setWhere("spawnbot_mission_spy");
		M4.addParameter(new Parameter("BeginAtWave", 3));
		M4.addParameter(new Parameter("RunForThisManyWaves", 1));
		M4.setCooldownTime(60);
		M4.addParameter(new Parameter("DesiredCount", 2));
		M4.bot.setClass("Spy");
		M4.bot.setSkill("Expert");
		M4.bot.setName("Spy");
		x.addPiece(M4);
		Mission M5 = new Mission();
		M5.setObjective("Spy");
		M5.setInitialCooldown(30);
		M5.setCooldownTime(60);
		M5.addParameter(new Parameter("BeginAtWave", 4));
		M5.addParameter(new Parameter("RunForThisManyWaves", 1));
		M5.addParameter(new Parameter("DesiredCount", 2));
		M5.bot.setClass("Spy");
		M5.bot.setSkill("Expert");
		M5.bot.setName("Spy");
		x.addPiece(M5);
		Mission M6 = new Mission();
		M6.setObjective("Spy");
		M6.setInitialCooldown(30);
		M6.setWhere("spawnbot_mission_spy");
		M6.addParameter(new Parameter("BeginAtWave", 6));
		M6.addParameter(new Parameter("RunForThisManyWaves", 1));
		M6.setCooldownTime(60);
		M6.addParameter(new Parameter("DesiredCount", 3));
		M6.bot.setClass("Spy");
		M6.bot.setSkill("Expert");
		M6.bot.setName("Spy");
		x.addPiece(M6);
		Wave W1 = new Wave();
		W1.addWaveOutput(new Output("StartWaveOutput", "wave_start_relay", "Trigger"));
		W1.addWaveOutput(new Output("DoneOutput", "wave_finished_relay", "trigger"));
		W1.addParameter(new Parameter("WaitWhenDone", 65));
		WaveSpawn ws1a = new WaveSpawn();
		ws1a.setWhere("spawnbot");
		ws1a.setTotalCount(48);
		ws1a.setMaxActive(6);
		ws1a.setSpawnCount(6);
		ws1a.setWaitBetweenSpawns(7);
		ws1a.setWaitBeforeStarting(0);
		ws1a.setTotalCurrency(400);
		TFBot b1 = new TFBot("Scout");
		b1.setSkill("Easy");
		ws1a.addBot(b1);
		W1.addWaveSpawn(ws1a);
		WaveSpawn ws1b = new WaveSpawn();
		ws1b.setWhere("spawnbot");
		ws1b.setTotalCount(16);
		ws1b.setMaxActive(6);
		ws1b.setSpawnCount(3);
		ws1b.setWaitBeforeStarting(10);
		ws1b.setWaitBetweenSpawns(6);
		ws1b.setTotalCurrency(200);
		TFBot b2 = new TFBot("Pyro");
		b2.setClass("Pyro");
		b2.setSkill("Easy");
		ws1b.addBot(b2);
		W1.addWaveSpawn(ws1b);
		x.addPiece(W1);
		Wave W2 = new Wave();
		W2.addWaveOutput(new Output("StartWaveOutput", "wave_start_relay", "Trigger"));
		W2.addWaveOutput(new Output("DoneOutput", "wave_finished_relay", "trigger"));
		W2.addParameter(new Parameter("WaitWhenDone", 65));
		WaveSpawn ws2a = new WaveSpawn();
		ws2a.setWhere("spawnbot");
		ws2a.setTotalCount(64);
		ws2a.setMaxActive(8);
		ws2a.setSpawnCount(4);
		ws2a.setWaitBeforeStarting(0);
		ws2a.setWaitBetweenSpawns(4);
		ws2a.setTotalCurrency(250);
		ws2a.addParameter(new Parameter("Support", 1));
		TFBot b3 = new TFBot("Scout");
		b3.setClass("Scout");
		b3.setSkill("Easy");
		b3.addParameter(new Parameter("WeaponRestrictions", "MeleeOnly"));
		ws2a.addBot(b3);
		W2.addWaveSpawn(ws2a);
		WaveSpawn ws2b = new WaveSpawn();
		ws2b.setWhere("spawnbot");
		ws2b.setTotalCount(24);
		ws2b.setMaxActive(3);
		ws2b.setSpawnCount(3);
		ws2b.setWaitBeforeStarting(10);
		ws2b.setWaitBetweenSpawns(10);
		ws2b.setTotalCurrency(200);
		TFBot b4 = new TFBot("Soldier");
		b4.setSkill("Easy");
		b4.setClass("Soldier");
		ws2b.addBot(b4);
		W2.addWaveSpawn(ws2b);
		WaveSpawn ws2c = new WaveSpawn();
		ws2c.setWhere("spawnbot");
		ws2c.setTotalCount(12);
		ws2c.setMaxActive(3);
		ws2c.setSpawnCount(3);
		ws2c.setWaitBeforeStarting(25);
		ws2c.setWaitBetweenSpawns(10);
		ws2c.setTotalCurrency(150);
		TFBot b5 = new TFBot("Demoman");
		b5.setClass("Demoman");
		b5.setSkill("Easy");
		ws2c.addBot(b5);
		W2.addWaveSpawn(ws2c);
		x.addPiece(W2);
		Wave W3 = new Wave();
		W3.addWaveOutput(new Output("DoneOutput", "wave_finished_relay", "trigger"));
		W3.addParameter(new Parameter("WaitWhenDone", 65));
		WaveSpawn ws3 = new WaveSpawn();
		ws3.addWaveOutput(new Output("FirstSpawnOutput", "boss_spawn_relay", "Trigger"));
		Tank t1 = new Tank();
		t1.setHealth(21000);
		t1.setSpeed(75);
		t1.setStartingPathTrackNode("boss_path_b1");
		ws3.addTank(t1);
		W3.addWaveSpawn(ws3);
		x.addPiece(W3);
		Wave W4 = new Wave();
		W4.addWaveOutput(new Output("StartWaveOutput", "wave_start_relay", "Trigger"));
		W4.addWaveOutput(new Output("DoneOutput", "wave_finished_relay", "trigger"));
		W4.addParameter(new Parameter("WaitWhenDone", 65));
		WaveSpawn ws4a = new WaveSpawn();
		ws4a.setWhere("spawnbot");
		ws4a.setTotalCount(80);
		ws4a.setMaxActive(10);
		ws4a.setSpawnCount(5);
		ws4a.setWaitBeforeStarting(0);
		ws4a.setWaitBetweenSpawns(0);
		ws4a.setTotalCurrency(350);
		ws4a.addParameter(new Parameter("Support", 1));
		TFBot b6 = new TFBot("Scout");
		b6.setClass("Scout");
		b6.setSkill("Easy");
		b6.addParameter(new Parameter("WeaponRestrictions", "MeleeOnly"));
		ws4a.addBot(b6);
		W4.addWaveSpawn(ws4a);
		WaveSpawn ws4b = new WaveSpawn();
		ws4b.setWhere("spawnbot");
		ws4b.setTotalCount(30);
		ws4b.setMaxActive(6);
		ws4b.setSpawnCount(3);
		ws4b.setWaitBeforeStarting(5);
		ws4b.setWaitBetweenSpawns(5);
		ws4b.setTotalCurrency(350);
		TFBot b7 = new TFBot("Heavy");
		b7.setClass("Heavyweapons");
		b7.setSkill("Easy");
		ws4b.addBot(b7);
		W4.addWaveSpawn(ws4b);
		Wave W5 = new Wave();
		W5.addWaveOutput(new Output("StartWaveOutput", "wave_start_relay", "Trigger"));
		W5.addWaveOutput(new Output("DoneOutput", "wave_finished_relay", "trigger"));
		W5.addParameter(new Parameter("WaitWhenDone", 65));
		WaveSpawn ws5a = new WaveSpawn();
		ws5a.setWhere("spawnbot");
		ws5a.setTotalCount(50);
		ws5a.setMaxActive(12);
		ws5a.setSpawnCount(6);
		ws5a.setWaitBeforeStarting(0);
		ws5a.setWaitBetweenSpawns(4);
		ws5a.setTotalCurrency(300);
		ws5a.addParameter(new Parameter("Support", 1));
		TFBot b8 = new TFBot("Scout");
		b8.setClass("Scout");
		b8.setSkill("Easy");
		b8.addParameter(new Parameter("WeaponRestrictions", "MeleeOnly"));
		ws5a.addBot(b8);
		W5.addWaveSpawn(ws5a);
		WaveSpawn ws5b = new WaveSpawn();
		ws5b.setWhere("spawnbot");
		ws5b.setTotalCount(1);
		ws5b.setMaxActive(1);
		ws5b.setSpawnCount(1);
		ws5b.setWaitBeforeStarting(0);
		ws5b.setWaitBetweenSpawns(0);
		ws5b.setTotalCurrency(400);
		TFBot b9 = new TFBot("Giant Heavy");
		b9.addParameter(new Parameter("Template", "T_TFBot_Giant_Heavyweapons"));
		ws5b.addBot(b9);
		W5.addWaveSpawn(ws5b);
		
		for(Enclosure e : x.OtherThings)
			e.SpaceOver(0);
		System.out.print(x);
	}

}
